<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>تغيير كلمة المرور</title>

  <style>
    :root {
      --primary-color: #ff7f50;
      --primary-hover: #ff9f43;
      --success-color: #1dd1a1;
      --error-color: #ff6b6b;
      --warning-color: #feca57;
      --text-color: #333;
      --light-gray: #f8f9fa;
      --border-color: #e0e0e0;
      --shadow-color: rgba(0,0,0,0.06);
    }
    
    body {
      background: var(--light-gray);
      min-height: 100vh;
      font-family: 'Cairo', Arial, sans-serif;
      margin: 0;
      padding: 0;
    }
    
    .change-password-outer {
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      padding: 1.5rem;
      box-sizing: border-box;
    }
    
    .change-password-card {
      background: #fff;
      border-radius: 12px;
      box-shadow: 0 2px 12px var(--shadow-color);
      padding: 2rem;
      width: 100%;
      max-width: 380px;
      margin: 0 auto;
    }
    
    .change-password-title {
      text-align: center;
      font-size: 1.4rem;
      color: var(--primary-color);
      margin-bottom: 1.5rem;
      font-weight: bold;
    }
    
    .form-group {
      margin-bottom: 1.3rem;
      position: relative;
    }
    
    .form-group label {
      display: block;
      margin-bottom: 0.5rem;
      color: var(--text-color);
      font-weight: 600;
      font-size: 0.95rem;
    }
    
    .form-group input {
      width: 100%;
      padding: 0.8rem 2.5rem 0.8rem 0.8rem;
      border: 1px solid var(--border-color);
      border-radius: 8px;
      font-size: 1rem;
      background: #fafbfc;
      transition: all 0.2s ease;
      color: var(--text-color);
      box-sizing: border-box;
    }
    
    .form-group input:focus {
      border-color: var(--primary-hover);
      background: #fff;
      outline: none;
      box-shadow: 0 0 0 3px rgba(255, 159, 67, 0.1);
    }
    
    .toggle-password {
      position: absolute;
      left: 12px;
      top: 50%;
      transform: translateY(-50%);
      cursor: pointer;
      color: #bbb;
      font-size: 1.1rem;
      z-index: 2;
      transition: color 0.2s;
      background: none;
      border: none;
      padding: 0;
    }
    
    .toggle-password:hover {
      color: var(--primary-hover);
    }
    
    .password-strength {
      margin-top: 0.5rem;
      height: 6px;
      border-radius: 3px;
      background: #ececec;
      overflow: hidden;
      width: 100%;
    }
    
    .password-strength-meter {
      height: 100%;
      width: 0;
      transition: width 0.4s ease, background 0.4s ease;
    }
    
    .strength-weak {
      background: var(--error-color);
      width: 25%;
    }
    
    .strength-medium {
      background: var(--warning-color);
      width: 50%;
    }
    
    .strength-good {
      background: #ffb347;
      width: 75%;
    }
    
    .strength-strong {
      background: var(--success-color);
      width: 100%;
    }
    
    .password-requirements {
      margin-top: 0.8rem;
      padding: 0.8rem;
      background: #f8f9fa;
      border-radius: 8px;
      border: 1px solid var(--border-color);
      transition: all 0.3s ease;
    }
    
    .password-requirements ul {
      list-style: none;
      padding: 0;
      margin: 0;
      display: flex;
      flex-direction: column;
      gap: 0.4rem;
    }
    
    .password-requirements li {
      font-size: 0.9rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;
      transition: color 0.2s;
    }
    
    .requirement-met {
      color: var(--success-color);
      font-weight: 500;
    }
    
    .requirement-not-met {
      color: #aaa;
    }
    
    .btn {
      width: 100%;
      padding: 0.9rem;
      background: var(--primary-color);
      color: white;
      border: none;
      border-radius: 8px;
      font-size: 1.05rem;
      font-weight: 700;
      cursor: pointer;
      margin-top: 1rem;
      transition: all 0.2s ease;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    }
    
    .btn:hover {
      background: var(--primary-hover);
      transform: translateY(-1px);
      box-shadow: 0 4px 8px rgba(0,0,0,0.15);
    }
    
    .btn:active {
      transform: translateY(0);
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    #alertBox {
      display: none;
      margin-bottom: 1.2rem;
      padding: 0.9rem 1rem;
      border-radius: 8px;
      font-size: 0.95rem;
      font-weight: 500;
      text-align: center;
      box-shadow: 0 2px 8px rgba(0,0,0,0.05);
      transition: all 0.3s ease;
    }
    
    #alertBox.success {
      background: rgba(29, 209, 161, 0.1);
      color: var(--success-color);
      border: 1px solid rgba(29, 209, 161, 0.3);
    }
    
    #alertBox.error {
      background: rgba(255, 107, 107, 0.1);
      color: var(--error-color);
      border: 1px solid rgba(255, 107, 107, 0.3);
    }
    
    #alertBox .icon {
      margin-left: 0.5rem;
      font-size: 1.1em;
      vertical-align: middle;
    }
    
    @media (max-width: 480px) {
      .change-password-outer {
        padding: 1rem;
      }
      
      .change-password-card {
        padding: 1.5rem 1rem;
      }
      
      .change-password-title {
        font-size: 1.2rem;
        margin-bottom: 1.2rem;
      }
      
      .form-group input {
        padding: 0.7rem 2.3rem 0.7rem 0.7rem;
      }
      
      .btn {
        padding: 0.8rem;
        font-size: 1rem;
      }
    }
    
    @media (max-width: 360px) {
      .change-password-card {
        padding: 1.2rem 0.8rem;
      }
      
      .form-group label {
        font-size: 0.9rem;
      }
      
      .form-group input {
        font-size: 0.95rem;
      }
      
      .password-requirements li {
        font-size: 0.85rem;
      }
    }
  </style>
</head>
  <%- include('partials/headerhome') %>
  <%- include('partials/headeraction') %>
<body>
  <div class="change-password-outer">
    <div class="change-password-card">
      <div class="change-password-title">تغيير كلمة المرور</div>
      <div id="alertBox" style="display:none;"></div>
      
      <form id="changePasswordForm" action="/change-password" method="POST" autocomplete="off" novalidate>
        <div class="form-group">
          <label for="currentPassword">كلمة المرور الحالية</label>
          <input type="password" id="currentPassword" name="currentPassword" required>
          <button type="button" class="toggle-password" onclick="togglePassword('currentPassword', this)">
            <i class="fa fa-eye"></i>
          </button>
        </div>
        
        <div class="form-group">
          <label for="newPassword">كلمة المرور الجديدة</label>
          <input type="password" id="newPassword" name="newPassword" required minlength="8">
          <button type="button" class="toggle-password" onclick="togglePassword('newPassword', this)">
            <i class="fa fa-eye"></i>
          </button>
          <div class="password-strength">
            <div id="passwordStrengthMeter" class="password-strength-meter"></div>
          </div>
          <div class="password-requirements" id="requirementsBox">
            <ul id="requirementsList">
              <li id="req-length"><i class="fa fa-circle"></i> 8 أحرف على الأقل</li>
              <li id="req-upper"><i class="fa fa-circle"></i> حرف كبير واحد على الأقل</li>
              <li id="req-lower"><i class="fa fa-circle"></i> حرف صغير واحد على الأقل</li>
              <li id="req-digit"><i class="fa fa-circle"></i> رقم واحد على الأقل</li>
              <li id="req-special"><i class="fa fa-circle"></i> رمز خاص واحد على الأقل</li>
            </ul>
          </div>
        </div>
        
        <div class="form-group">
          <label for="confirmPassword">تأكيد كلمة المرور الجديدة</label>
          <input type="password" id="confirmPassword" name="confirmPassword" required minlength="8">
          <button type="button" class="toggle-password" onclick="togglePassword('confirmPassword', this)">
            <i class="fa fa-eye"></i>
          </button>
        </div>
        
        <button type="submit" class="btn">تغيير كلمة المرور</button>
      </form>
    </div>
  </div>
  
  <%- include('partials/footer') %>
  
  <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/js/all.min.js"></script>
  <script>
    // تحسين وظيفة تبديل رؤية كلمة المرور
    function togglePassword(fieldId, button) {
      const input = document.getElementById(fieldId);
      const icon = button.querySelector('i');
      
      if (input.type === "password") {
        input.type = "text";
        icon.classList.replace('fa-eye', 'fa-eye-slash');
      } else {
        input.type = "password";
        icon.classList.replace('fa-eye-slash', 'fa-eye');
      }
    }
    
    // تحقق من قوة كلمة المرور
    const newPasswordInput = document.getElementById('newPassword');
    const strengthMeter = document.getElementById('passwordStrengthMeter');
    const requirementsBox = document.getElementById('requirementsBox');
    
    const requirements = {
      length: document.getElementById('req-length'),
      upper: document.getElementById('req-upper'),
      lower: document.getElementById('req-lower'),
      digit: document.getElementById('req-digit'),
      special: document.getElementById('req-special')
    };
    
    // إخفاء مربع المتطلبات في البداية
    requirementsBox.style.display = 'none';
    
    newPasswordInput.addEventListener('focus', function() {
      requirementsBox.style.display = 'block';
    });
    
    newPasswordInput.addEventListener('blur', function() {
      if (!newPasswordInput.value) {
        requirementsBox.style.display = 'none';
      }
    });
    
    newPasswordInput.addEventListener('input', function() {
      const val = newPasswordInput.value;
      let score = 0;
      
      // تحقق من كل شرط
      const hasLength = val.length >= 8;
      const hasUpper = /[A-Z]/.test(val);
      const hasLower = /[a-z]/.test(val);
      const hasDigit = /\d/.test(val);
      const hasSpecial = /[!@#$%^&*()_+\-=[\]{};':"\\|,.<>/?]+/.test(val);
      
      updateRequirement('length', hasLength);
      updateRequirement('upper', hasUpper);
      updateRequirement('lower', hasLower);
      updateRequirement('digit', hasDigit);
      updateRequirement('special', hasSpecial);
      
      // حساب قوة كلمة المرور
      score = [hasLength, hasUpper, hasLower, hasDigit, hasSpecial].filter(Boolean).length;
      
      // تحديث شريط القوة
      updateStrengthMeter(score);
      
      // التحقق من تطابق كلمة المرور مع التأكيد
      checkPasswordMatch();
    });
    
    // التحقق من تطابق كلمة المرور الجديدة مع التأكيد
    document.getElementById('confirmPassword').addEventListener('input', checkPasswordMatch);
    
    function checkPasswordMatch() {
      const newPassword = newPasswordInput.value;
      const confirmPassword = document.getElementById('confirmPassword').value;
      
      if (newPassword && confirmPassword) {
        if (newPassword !== confirmPassword) {
          document.getElementById('confirmPassword').setCustomValidity('كلمة المرور غير متطابقة');
        } else {
          document.getElementById('confirmPassword').setCustomValidity('');
        }
      }
    }
    
    function updateRequirement(type, isValid) {
      const req = requirements[type];
      const icon = req.querySelector('i');
      
      if (isValid) {
        req.className = 'requirement-met';
        icon.className = 'fa fa-check-circle';
      } else {
        req.className = 'requirement-not-met';
        icon.className = 'fa fa-circle';
      }
    }
    
    function updateStrengthMeter(score) {
      strengthMeter.className = 'password-strength-meter';
      
      if (score === 0) {
        strengthMeter.style.width = '0';
      } else if (score === 1) {
        strengthMeter.classList.add('strength-weak');
      } else if (score === 2 || score === 3) {
        strengthMeter.classList.add('strength-medium');
      } else if (score === 4) {
        strengthMeter.classList.add('strength-good');
      } else if (score === 5) {
        strengthMeter.classList.add('strength-strong');
      }
    }
    
    // إرسال النموذج باستخدام Fetch API
    document.getElementById('changePasswordForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const currentPassword = document.getElementById('currentPassword').value;
      const newPassword = document.getElementById('newPassword').value;
      const confirmPassword = document.getElementById('confirmPassword').value;
      const alertBox = document.getElementById('alertBox');
      
      // إخفاء رسالة التنبيه السابقة
      alertBox.style.display = 'none';
      
      // التحقق من صحة النموذج
      if (!this.checkValidity()) {
        return;
      }
      
      try {
        const btn = this.querySelector('button[type="submit"]');
        btn.disabled = true;
        btn.innerHTML = '<i class="fa fa-spinner fa-spin"></i> جاري التغيير...';
        
        const res = await fetch('/change-password', {
          method: 'POST',
          headers: { 
            'Content-Type': 'application/json',
            'X-Requested-With': 'XMLHttpRequest'
          },
          body: JSON.stringify({ 
            currentPassword, 
            newPassword, 
            confirmPassword 
          })
        });
        
        const data = await res.json();
        
        if (data.success) {
          showAlert(data.message, 'success');
          this.reset();
          requirementsBox.style.display = 'none';
          strengthMeter.style.width = '0';
        } else {
          showAlert(data.message, 'error');
          
          if (data.field) {
            const field = document.getElementById(data.field);
            field.focus();
            field.setCustomValidity(data.message);
          }
        }
      } catch (err) {
        showAlert('حدث خطأ أثناء الاتصال بالخادم', 'error');
        console.error('Error:', err);
      } finally {
        const btn = document.querySelector('#changePasswordForm button[type="submit"]');
        btn.disabled = false;
        btn.textContent = 'تغيير كلمة المرور';
      }
    });
    
    function showAlert(message, type) {
      const alertBox = document.getElementById('alertBox');
      const icon = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle';
      
      alertBox.innerHTML = `<span class="icon"><i class="fa ${icon}"></i></span> ${message}`;
      alertBox.className = type;
      alertBox.style.display = 'block';
      
      // إخفاء التنبيه تلقائياً بعد 5 ثواني
      setTimeout(() => {
        alertBox.style.opacity = '0';
        setTimeout(() => {
          alertBox.style.display = 'none';
          alertBox.style.opacity = '1';
        }, 300);
      }, 5000);
    }
  </script>
</body>
</html>